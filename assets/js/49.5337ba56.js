(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{474:function(n,a,e){"use strict";e.r(a);var t=e(21),s=Object(t.a)({},(function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"yaml-templates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml-templates"}},[n._v("#")]),n._v(" YAML Templates")]),n._v(" "),e("p",[n._v("To make it easier for you getting started with ESPHome, you will find here, with a lot of thanks to hard-working helpers, some examples of devices that are widely used.")]),n._v(" "),e("h2",{attrs:{id:"secrets-yaml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#secrets-yaml"}},[n._v("#")]),n._v(" SECRETS.YAML")]),n._v(" "),e("p",[n._v("ToDo: what is it")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[n._v("tip")]),n._v(" "),e("p",[n._v("extra info")])]),n._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[n._v("Warnung / Hinweis")]),n._v(" "),e("p",[n._v("extra info")])]),n._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[n._v("Achtung")]),n._v(" "),e("p",[n._v("extra info")])]),n._v(" "),e("h3",{attrs:{id:"why"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[n._v("#")]),n._v(" why")]),n._v(" "),e("h3",{attrs:{id:"how-to-use"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use"}},[n._v("#")]),n._v(" how  to use")]),n._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[n._v("#")]),n._v(" Example")]),n._v(" "),e("details",[e("summary",[n._v(" Show Template\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h2",{attrs:{id:"gosund"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gosund"}},[n._v("#")]),n._v(" Gosund")]),n._v(" "),e("h3",{attrs:{id:"sp1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp1"}},[n._v("#")]),n._v(" SP1")]),n._v(" "),e("details",[e("summary",[n._v(" Beispiel anzeigen\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h3",{attrs:{id:"sp2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp2"}},[n._v("#")]),n._v(" SP2")]),n._v(" "),e("details",[e("summary",[n._v(" Beispiel anzeigen\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h3",{attrs:{id:"sp111"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp111"}},[n._v("#")]),n._v(" SP111")]),n._v(" "),e("details",[e("summary",[n._v(" Beispiel anzeigen\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h3",{attrs:{id:"sp112"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp112"}},[n._v("#")]),n._v(" SP112")]),n._v(" "),e("details",[e("summary",[n._v(" Beispiel anzeigen\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h2",{attrs:{id:"teckin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#teckin"}},[n._v("#")]),n._v(" Teckin")]),n._v(" "),e("h3",{attrs:{id:"sp10"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp10"}},[n._v("#")]),n._v(" SP10")]),n._v(" "),e("details",[e("summary",[n._v(" Beispiel anzeigen\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h3",{attrs:{id:"sp20"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp20"}},[n._v("#")]),n._v(" SP20")]),n._v(" "),e("details",[e("summary",[n._v(" Beispiel anzeigen\n")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n')])])])]),n._v(" "),e("h2",{attrs:{id:"sonoff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sonoff"}},[n._v("#")]),n._v(" Sonoff")]),n._v(" "),e("blockquote",[e("p",[n._v("ToDo<")])]),n._v(" "),e("h2",{attrs:{id:"shelly"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shelly"}},[n._v("#")]),n._v(" Shelly")]),n._v(" "),e("blockquote",[e("p",[n._v("ToDo<")])]),n._v(" "),e("h2",{attrs:{id:"vansware"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vansware"}},[n._v("#")]),n._v(" Vansware")]),n._v(" "),e("blockquote",[e("p",[n._v("ToDo<")])])])}),[],!1,null,null,null);a.default=s.exports}}]);