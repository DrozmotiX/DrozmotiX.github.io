(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{323:function(e,t,r){e.exports=r.p+"assets/img/dashboard.0c0adbf4.png"},454:function(e,t,r){"use strict";r.r(t);var a=r(19),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"first-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#first-steps"}},[e._v("#")]),e._v(" First steps")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/iobroker.esphome",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"http://img.shields.io/npm/v/iobroker.esphome.svg",alt:"NPM version"}}),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://www.npmjs.com/package/iobroker.esphome",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/npm/dm/iobroker.esphome.svg",alt:"Downloads"}}),a("OutboundLink")],1),e._v(" "),a("img",{attrs:{src:"http://iobroker.live/badges/esphome-installed.svg",alt:"Number of Installations (latest)"}}),e._v(" "),a("img",{attrs:{src:"http://iobroker.live/badges/esphome-stable.svg",alt:"Number of Installations (stable)"}}),e._v(" "),a("a",{attrs:{href:"https://david-dm.org/DrozmotiX/iobroker.esphome",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://img.shields.io/david/DrozmotiX/iobroker.esphome.svg",alt:"Dependency Status"}}),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://weblate.iobroker.net/engage/adapters/?utm_source=widget",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://weblate.iobroker.net/widgets/adapters/-/ESPHome/svg-badge.svg",alt:"Translation status"}}),a("OutboundLink")],1),e._v(" "),a("a",{attrs:{href:"https://snyk.io/test/github/DrozmotiX/ioBroker.esphome",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://snyk.io/test/github/DrozmotiX/ioBroker.esphome/badge.svg",alt:"Known Vulnerabilities"}}),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://nodei.co/npm/iobroker.esphome/",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://nodei.co/npm/iobroker.esphome.png?downloads=true",alt:"NPM"}}),a("OutboundLink")],1)]),e._v(" "),a("p",[a("strong",[e._v("Tests:")]),e._v(" "),a("img",{attrs:{src:"https://github.com/DrozmotiX/ioBroker.esphome/workflows/Test%20and%20Release/badge.svg",alt:"Test and Release"}})]),e._v(" "),a("p",[a("strong",[e._v("This adapter uses Sentry libraries to automatically report exceptions and code errors to developers.")]),e._v(" For more details and information on how to disable error reporting, see the "),a("a",{attrs:{href:"https://github.com/ioBroker/plugin-sentry#plugin-sentry",target:"_blank",rel:"noopener noreferrer"}},[e._v("Sentry plugin documentation"),a("OutboundLink")],1),e._v("! Sentry reporting is used from js-controller 3.0 onwards.")]),e._v(" "),a("p",[e._v("Control your ESP8266/ESP32 with simple but powerful configuration files created and managed by ESPHome.\nNative integration of the ESPHome managed device (including dashboard) through its native API and ensure that all data is synchronized (live event handling, no data polling ! ðŸ˜ƒ")]),e._v(" "),a("p",[a("img",{attrs:{src:r(323),alt:"logo"}})]),e._v(" "),a("p",[e._v("This adapter uses the "),a("a",{attrs:{href:"https://github.com/Nafaya/esphome-native-api#readme",target:"_blank",rel:"noopener noreferrer"}},[e._v("esphome-native-api"),a("OutboundLink")],1),e._v(" with all credits to @Nafaya to interact with the "),a("a",{attrs:{href:"https://esphome.io/components/api.html?highlight=api",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESPHome API"),a("OutboundLink")],1),e._v("!")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("* NodeJS >= 12.x\n* Python >= 3.6, <4.0\n* API is enabled in YAML\n* For admin tabs (optional)\n    * ESPHome Dashboard IP is provided in instance settings.\n")])])]),a("h3",{attrs:{id:"enable-api-in-yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enable-api-in-yaml"}},[e._v("#")]),e._v(" Enable API in YAML")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("api:\n  password: 'MyPassword'\n")])])]),a("h3",{attrs:{id:"example-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-configuration"}},[e._v("#")]),e._v(" Example configuration")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('esphome:\n  name: sensor_badkamer\n  platform: ESP32\n  board: esp-wrover-kit\n\nwifi:\n  use_address: 192.168.10.122\n  ssid: "xxxxx"\n  password: "xxxxxx"\n          \n# Enable ESPHome API\napi:\n    password: \'MyPassword\'\n# Activate i2c bus  \ni2c:\n  sda: 21\n  scl: 22\n  scan: True\n  id: bus_a\n  \n# Example configuration for bh1750\nsensor:\n  - platform: bh1750\n    name: "Hal_Illuminance"\n    address: 0x23\n    measurement_time: 69\n    update_interval: 10s\n    \n# Example configuration for an GPIO output    \noutput:\n  - platform: gpio\n    pin: 12\n    inverted: true\n    id: gpio_12\n    \n# Example configuration linking a switch to the previous defined output\nswitch:\n  - platform: output\n    name: "Generic Output"\n    output: \'gpio_12\'\n    \n')])])])])}),[],!1,null,null,null);t.default=n.exports}}]);